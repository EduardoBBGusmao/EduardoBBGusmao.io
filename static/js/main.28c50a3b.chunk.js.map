{"version":3,"sources":["logo.svg","imgs/logo-final.png","forms.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Forms","enviaForm","event","preventDefault","console","log","state","b","user_name","nome","contact_number","telefone","user_email","email","message","mensagem","emailjs","send","then","result","text","error","props","history","push","setNome","bind","setEmail","setTelefone","setMensagem","sendFeedback","this","setState","target","value","templateId","variables","className","style","minHeight","minWidth","padding","paddingRight","paddingLeft","src","require","width","marginTop","marginRight","marginLeft","margin","marginBottom","class","onSubmit","onChange","required","type","height","color","Component","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28c50a3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-final.c0b8d3ad.png\";","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport {Container, Row, Col, Form} from 'react-bootstrap'\nimport './App.css';\nimport emailjs from 'emailjs-com'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Forms extends Component {\n\n    constructor() {\n      super();\n      this.state = {nome:' ',email:'',telefone:'',mensagem:''};\n      this.setNome = this.setNome.bind(this);\n      this.setEmail = this.setEmail.bind(this);\n      this.setTelefone = this.setTelefone.bind(this);\n      this.setMensagem = this.setMensagem.bind(this);\n      this.enviaForm = this.enviaForm.bind(this);\n      this.sendFeedback= this.sendFeedback.bind(this);\n    }\n  \n    setNome(event){\n        this.setState({nome:event.target.value})\n        console.log(this.state)\n      }\n  \n    setEmail(event){\n        this.setState({email:event.target.value})\n        console.log(this.state)\n    }\n\n    setTelefone(event){\n        this.setState({telefone:event.target.value})\n        console.log(this.state)\n        }\n    \n    setMensagem(event){\n        this.setState({mensagem:event.target.value})\n        console.log(this.state)\n        }\n            \n    enviaForm = (event) => {\n        event.preventDefault()\n        console.log(\"news\",this.state)\n        var b = {user_name:this.state.nome, contact_number:this.state.telefone, user_email:this.state.email, message:this.state.mensagem}\n        const templateId = 'template_5qNZHx7h';\n        const service_id = 'interfrotas_go';\n        emailjs.send(service_id,\n        templateId,\n        b,\n        'user_iudU7Sw5UdgWNvhovPqkZ'\n        ) .then((result) => {\n          console.log(result.text);\n        }, (error) => {\n          console.log(error);\n         });\n        this.props.history.push('/');\n        console.log(\"teste\")\n    }\n\n    sendFeedback (templateId, variables) {\n       console.log(\"teste\")\n      }\n  \n    render() {\n      return (\n        <div className=\"container-fluid \" style={{minHeight: \"100%\", minWidth:\"100%\", padding:'0', paddingRight:\"15px\", paddingLeft:\"15px\"}} >\n          <div className=\"row col1 h-100\">\n            <div className=\"col\" style={{padding:'0'}}>\n              <img src={require('./imgs/logo-final.png')} width=\"400px\" className=\"logo\"/>\n              </div>\n            <div className=\"col-sm \" style={{marginTop:\"8%\", marginRight:\"10px\", marginLeft:\"10px\"}} >\n              <div className=\"row  align-middle align-self-center\">\n                <div className=\"inputs-form \">\n                  <div style={{padding:\"10px\"}}>\n                    <div style={{margin:\"20px 5px\",marginBottom:\"0px\"}}>\n                      <h3 className=\"title\">FAÇA SEU PRÉ-CADASTRO</h3>\n                      <p className=\"subtitle\">RECEBA O LANÇAMENTO EM PRIMEIRA MÃO E GARANTA DESCONTOS EXCLUSIVOS E GARANTA UM MÊS GRÁTIS EM SUA ASSINATURA*</p>\n                      <div class=\"line\"></div>\n                    </div>\n                    <form onSubmit={this.enviaForm} className=\" forms\">\n                      <div class=\"form-group input-div\">\n                        <label>NOME</label>\n                        <input class=\"form-control\" onChange={this.setNome} required value={this.state.nome}/>\n                      </div>\n                      <div class=\"form-group input-div\">\n                        <label>EMAIL</label>\n                        <input class=\"form-control\"  onChange={this.setEmail} required value={this.state.email}/>\n                      </div>\n                      <div class=\"form-group input-div\">\n                        <label>TELEFONE</label>\n                        <input class=\"form-control\"  onChange={this.setTelefone} required value={this.state.telefone}/>\n                      </div>\n                      <div class=\"form-group input-div\">\n                        <label>MENSAGEM</label>\n                        <textarea class=\"form-control\"  onChange={this.setMensagem} required value={this.state.mensagem}/>\n                      </div>\n                      <div className=\"justify-content-center d-flex\">\n                        <button className=\"btn1\"type='submit' >ENVIAR</button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\" style={{marginTop:\"10px\",height:\"100%\",marginLeft:\"10px\", color:\"white\"}}>\n          <p className=\"align-text-bottom\">*Benefício válido para assinatura do plano de 24 meses, ganhando o 25º mês do contrato. Consulte os modelos selecionados. Para mais informações consulte o regulamento.\n          </p>\n      </div>\n          </div>\n        </div>\n      )\n    }\n}\nexport default Forms","import React from 'react';\nimport {Switch, Route, withRouter } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Forms from './forms'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction App() {\n  return (\n    <div className=\"container-fluid vh-100 bg\"  style={{padding:'0'}}>\n      <div  className=\"container-sm-fluid\"  style={{minHeight: \"100%\", minWidth:\"100%\"}}>\n      <Switch>\n        <Route exact path='/' render={(props) => <Forms {...props}/>}/>\n      </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n                        \n                     ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter><App className=\"w-100\" /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}